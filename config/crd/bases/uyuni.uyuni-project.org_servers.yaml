---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: servers.uyuni.uyuni-project.org
spec:
  group: uyuni.uyuni-project.org
  names:
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.fqdn
      name: FQDN
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Server is the Schema for the servers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServerSpec defines the desired state of Server
            properties:
              adminCredentialsSecret:
                description: AdminCredentialsSecret defines the name of the secret
                  containing the first user credentials. This secret is only used
                  during the installation and can be disposed of after. A secret of
                  basic-auth type is required here.
                type: string
              db:
                description: DB defines how to access and configure the internal database.
                properties:
                  adminCredentialsSecret:
                    description: AdminCredentialsSecret defines the name of the secret
                      containing the admin credentials to use. This is only needed
                      for an external Database. The credentials secrets are expected
                      to container username and password items.
                    type: string
                  credentialsSecret:
                    description: CredentialsSecret defines the name of the secret
                      containing the credentials to use. The credentials secrets are
                      expected to container username and password items.
                    type: string
                  host:
                    description: "Host defines the FQDN to use to connect to, for
                      an external database. \n This can be omitted for an external
                      database if the corresponding service is created outside of
                      the operator. A service named db would describe how to access
                      the internal database."
                    type: string
                  name:
                    default: uyuni
                    description: Name defines the name of the database to connect
                      to.
                    type: string
                  port:
                    description: "Port defines the port to connect to, for an external
                      database. \n Like Host, this can be omitted if the service is
                      created outside of the operator."
                    type: integer
                type: object
              debug:
                default: false
                description: Debug defines whether the Java debug ports should be
                  enabled and exposed. This is not recommended on a production server.
                type: boolean
              email:
                description: Email defines the email for the server administrator
                maxLength: 128
                minLength: 1
                type: string
              email_from:
                description: EmailFrom defines the email used to send the notification
                  emails.
                type: string
              fqdn:
                description: Fqdn defines the Fully Qualified Domain Name to use for
                  the Uyuni server.
                pattern: ^([a-zA-Z0-9]{1}[a-zA-Z0-9-]{0,62})(\.[a-zA-Z0-9]{1}[a-zA-Z0-9-]{0,62})*?(\.[a-zA-Z]{1}[a-zA-Z0-9]{0,62})\.?$
                type: string
              image:
                default: registry.opensuse.org/uyuni/server:latest
                description: Image defines the image to use for the big server container.
                type: string
              ingress:
                description: Ingress defines the name of the ingress for which to
                  generate rules. Accepted values are nginx or traefik. If anything
                  else if provided, no Ingress rule will be generated.
                type: string
              pullPolicy:
                description: PullPolicy defines the pull policy for all images used
                  by the server.
                type: string
              pullSecret:
                description: PullSecret defines the name of the secret to use to pull
                  the images from the registry.
                type: string
              reportdb:
                description: ReportDB defines how to access and configure the report
                  database.
                properties:
                  credentialsSecret:
                    description: CredentialsSecret defines the name of the secret
                      containing the credentials to use. The credentials secrets are
                      expected to container username and password items.
                    type: string
                  host:
                    description: "Host defines the FQDN to use to connect to, for
                      an external database. \n This can be omitted for an external
                      database if the corresponding service is created outside of
                      the operator. A service named reportdb would describe how to
                      access the report database."
                    type: string
                  name:
                    default: reportdb
                    description: Name defines the name of the database to connect
                      to.
                    type: string
                  port:
                    description: "Port defines the port to connect to, for an external
                      database. \n Like Host, this can be omitted if the service is
                      created outside of the operator."
                    type: integer
                type: object
              ssl:
                description: SSL defines how to get the SSL certificates. It can be
                  using existing TLS secrets or cert-manager issuers. If nothing is
                  provided
                properties:
                  ServerSecretName:
                    default: uyuni-server-tls
                    description: ServerSecretName defines the name of the Secret containing
                      the server TLS secret. The secret can either be generated by
                      cert-manager or statically defined. The TLS secret is expected
                      to contain the CA certificate in the ca.crt item.
                    type: string
                  issuerName:
                    description: IssuerName defines the name of the cert-manager issuer
                      to use for ingress rules. Leave empty if cert-manager is not
                      used.
                    type: string
                type: object
              timezone:
                description: Timezone defines the time zone to set in the server containers.
                type: string
              volumes:
                description: Volumes defines configuration for the server persistent
                  volumes claims. Changing the persistent volumes claims storage class
                  or size after the initial creation will have no effect.
                properties:
                  cache:
                    description: Cache is the configuration of the var-cache volume.
                    properties:
                      class:
                        description: Class is the storage class of the volume.
                        type: string
                      size:
                        description: Size is the requested size of the volume using
                          kubernetes values like '100Gi'.
                        type: string
                    type: object
                  class:
                    description: Class is the default storage class for all the persistent
                      volume claims.
                    type: string
                  database:
                    description: Database is the configuration of the var-pgsql volume.
                    properties:
                      class:
                        description: Class is the storage class of the volume.
                        type: string
                      size:
                        description: Size is the requested size of the volume using
                          kubernetes values like '100Gi'.
                        type: string
                    type: object
                  mirror:
                    description: Mirror defines the name of a persistent volume claim
                      to use as mirror by the server. The persistent volume claim
                      is assumed to be existing, bound and populated. No mirror will
                      be set up if omitted.
                    type: string
                  packages:
                    description: Packages is the configuration of the var-spacewalk
                      volume containing the synchronizede repositories.
                    properties:
                      class:
                        description: Class is the storage class of the volume.
                        type: string
                      size:
                        description: Size is the requested size of the volume using
                          kubernetes values like '100Gi'.
                        type: string
                    type: object
                  www:
                    description: Www is the configuration of the srv-www volume containing
                      the imags and distributions.
                    properties:
                      class:
                        description: Class is the storage class of the volume.
                        type: string
                      size:
                        description: Size is the requested size of the volume using
                          kubernetes values like '100Gi'.
                        type: string
                    type: object
                type: object
            required:
            - db
            - fqdn
            - reportdb
            type: object
          status:
            description: ServerStatus defines the observed state of Server
            properties:
              conditions:
                description: Conditions store the status conditions of the Server
                  instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
